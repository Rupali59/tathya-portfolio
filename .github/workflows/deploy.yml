name: Deploy

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["Build Checks"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Verify build output
        run: |
          echo "üîç Verifying build output..."
          if [ ! -d ".next" ]; then
            echo "‚ùå Build failed: .next directory not found"
            exit 1
          fi

          if [ ! -f ".next/BUILD_ID" ]; then
            echo "‚ùå Build failed: BUILD_ID file not found"
            exit 1
          fi

          if [ ! -d ".next/static" ]; then
            echo "‚ùå Build failed: static directory not found"
            exit 1
          fi

          echo "‚úÖ Build verification successful!"
          echo "Build ID: $(cat .next/BUILD_ID)"

      - name: Deploy to production
        run: |
          echo "üöÄ Starting deployment..."
          echo "‚úÖ Build checks passed and verified - proceeding with deployment"

          # Add your deployment commands here based on your hosting platform:

          # For Vercel:
          # npm install -g vercel
          # vercel --prod --token ${{ secrets.VERCEL_TOKEN }}

          # For Netlify:
          # npm install -g netlify-cli
          # netlify deploy --prod --dir=.next --site=${{ secrets.NETLIFY_SITE_ID }} --auth=${{ secrets.NETLIFY_AUTH_TOKEN }}

          # For AWS S3 + CloudFront:
          # aws s3 sync .next/static s3://${{ secrets.S3_BUCKET }}/static --delete
          # aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

          # For now, just echo success
          echo "üéâ Deployment completed successfully!"

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Deployment successful!"
          else
            echo "‚ùå Deployment failed!"
          fi
